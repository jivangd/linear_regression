Datos=data.frame(cbind(x,y))
Datos$x <- as.factor(Datos$x)
summary(Datos)
#I Gráfico para describir los datos (boxplot)
boxplot(y ~ x, data = Datos, col = "white", outline=FALSE)
stripchart(x ~ y, data = Datos,
method = "jitter",
pch = 19,
col = 2:4,
vertical = TRUE,
add = TRUE)
#Ejemplo para verificación de supuestos
# H_o: las varianzas de los grupos es la misma vs H_a: al menos un grupo tiene una varianza diferente
bartlett.test(y ~ x, data = Datos)
library(car)
leveneTest(y ~ x, data = Datos)
fligner.test(y ~ x, data = Datos)
shapiro.test( Datos$y[Datos$x==levels(Datos$x)[1]])
shapiro.test( Datos$y[Datos$x==levels(Datos$x)[2]])
shapiro.test( Datos$y[Datos$x==levels(Datos$x)[3]])
fit=lm(y ~ x, data = Datos)
summary(fit)
#III
### Hiótesis que se contrastan con la tabla ANOVA
#H0: b1=0, b2=0, b3=0 vs Ha: b1 !=0  o b2!=0 o b3!=0
drop1(fit, test="F")
##IV
Ventas_promedio <- sum(y)/length(y)
#H0:b0=b0+b1=b0+b2=b0+b3=Ventas promedio vs Ha: b0!=ventas promedio o
#b0+b1!= ventas promedio o b0+b2!= ventas promedio o b0+b2!= ventas promedio
library(multcomp)
K=matrix(c(1,0,0,0,
1,1,0,0,
1,0,1,0,
1,0,0,1), ncol=4, nrow=4, byrow=TRUE)
m=c(Ventas_promedio,Ventas_promedio, Ventas_promedio,Ventas_promedio)
summary(glht(fit, linfct=K, rhs=m),test=Ftest())
#V
### Ventas con empaque tipo 1 = ventas promedio ¿?
#E(Y;grupo=trt1) = b0 = ventas promedio
#b0 = ventas promedio
#Aquí Ho: b0 = ventas promedio
K=matrix(c(1,0,0,0), ncol=4, nrow=1, byrow=TRUE)
m=c(Ventas_promedio)
summary(glht(fit, linfct=K, rhs=m),test=Ftest())
summary(glht(fit, linfct=K, rhs=m)
summary(glht(fit, linfct=K, rhs=m))
m=c(Ventas_promedio)
summary(glht(fit, linfct=K, rhs=m))
### Ventas con empaque tipo 2 = ventas promedio ¿?
#E(Y;grupo=trt1) = b0+b1 = ventas promedio
#Aquí Ho: b0+b1 = ventas promedio
K=matrix(c(1,1,0,0), ncol=4, nrow=1, byrow=TRUE)
m=c(Ventas_promedio)
summary(glht(fit, linfct=K, rhs=m))
### Ventas con empaque tipo 3 = ventas promedio ¿?
#E(Y;grupo=trt1) = b0+b2 = ventas promedio
#Aquí Ho: b0+b2 = ventas promedio
K=matrix(c(1,0,1,0), ncol=4, nrow=1, byrow=TRUE)
m=c(Ventas_promedio)
summary(glht(fit, linfct=K, rhs=m))
### Ventas con empaque tipo 4 = ventas promedio ¿?
#E(Y;grupo=trt1) = b0+b3 = ventas promedio
#Aquí Ho: b0+b3 = ventas promedio
K=matrix(c(1,0,0,1), ncol=4, nrow=1, byrow=TRUE)
m=c(Ventas_promedio)
summary(glht(fit, linfct=K, rhs=m))
##O quitando redundancias tenemos que
#H0:b0=Ventas promedio, b1=b2=b3=0 vs Ha: b0!=ventas promedio o
#b1!= 0 o b2!= 0 o b3!= 0
library(multcomp)
K=matrix(c(1,0,0,0,
0,1,0,0,
0,0,1,0,
0,0,0,1), ncol=4, nrow=4, byrow=TRUE)
m=c(Ventas_promedio,0, 0,0)
summary(glht(fit, linfct=K, rhs=m),test=Ftest())
getwd()
setwd("C:/Users/usuario1/OneDrive/Escritorio/MNPYRL/Tarea 2")
gc()
rm(list = ls(all.names = TRUE))
getwd()
Datos <- read.csv("Ex4A.csv")
View(Datos)
head(Datos)
summary(Datos)
Datos$Sexo <- as.factor(Datos$Sexo)
Datos$Trat <- as.factor(Datos$Trat)
head(datos)
head(Datos)
summary(Datos)
rm(list = ls(all.names = TRUE))
getwd()
Data <- read.csv("Ex4A.csv")
summary(Datos)
Data$Sexo <- as.factor(Data$Sexo)
Data$Trat <- as.factor(Data$Trat)
summary(Data)
levels(Data)
levels(Data$Sexo)
summary(Data)
############## I)
boxplot(Puntaje~Sexo + Trat ,outline=FALSE)
View(Data)
############## I)
boxplot(Puntaje~Sexo + Trat , data= Data, outline=FALSE)
############## I)
boxplot(Puntaje~Sexo + Trat , data= Data, col=white, outline=FALSE)
############## I)
boxplot(Puntaje~Sexo + Trat , data= Data, col= "white", outline=FALSE)
fit=lm(Puntaje~Sexo+Trat+Sexo:Trat, data=Data)
summary(fit)
############## I)
levels(Dta$Sexo)
############## I)
levels(Data$Sexo)
boxplot(Puntaje~Sexo + Trat , data= Data, col= "white", outline=FALSE)
levels(Data$Trat)
summary(fit)
############## I)
levels(Data$Sexo)
levels(Data$Trat)
summary(fit)
10.1530 -1.8453
10.1530 - 3.9427
10.1530 + 0.3112
10.4642 - 1.8453
10.4642 - 3.9427
data(PlantGrowth)
force(PlantGrowth)
View(PlantGrowth)
summary(fit)
10.4642 - 1.8453 - 0.3023
10.4642 - 3.9427+ 3.5800
# H0: B1=B2=B3=B4=B5=0 vs Ha: B0!=0 o B1!=0 o B2!=0 o B3!=0 o B4!=0 o B5!=0
summary(fit)
#################IV)
library(multcomp)
K=matrix(c(0,0,0,0,1,0,
0,0,0,0,0,1), ncol=6, nrow=2, byrow=TRUE)
m=c(0,0)
summary(glht(fit, linfct=K, rhs=m), test=Ftest())
#Se rechaza H0 con una significancia de 0.025 pues p-value = 0.0001486 < 0.025
drop1(fit, test = "F")
rm(list = ls(all.names = TRUE))
getwd()
Data <- read.csv("Ex4A.csv")
Data$Sexo <- as.factor(Data$Sexo)
Data$Trat <- as.factor(Data$Trat)
summary(Data)
############## I)
levels(Data$Sexo)
levels(Data$Trat)
boxplot(Puntaje~Sexo + Trat , data= Data, col= "white", outline=FALSE)
boxplot(Puntaje~Trat + Sexo , data= Data, col= "white", outline=FALSE)
#Ajuste del modelo con interacción
fit=lm(Puntaje~Trat+Sexo+Trat:Sexo, data=Data)
summary(fit)
#Mujer
#E(Puntaje;Trat=Control,Sexo=Mujer)= b0 + b3 = 10.1530 + 0.3112 = 10.4642
#E(Puntaje;Trat=Trat1, Sexo=Mujer)= b0 + b1 + b3 + b4 =
10.4642 - 1.8453 - 0.3023 = 8.3166
summary(fit)
# H0: B1=B2=B3=B4=B5=0 vs Ha: B0!=0 o B1!=0 o B2!=0 o B3!=0 o B4!=0 o B5!=0
summary(fit)
#################IV)
#H0: b4=0 y b5=0 vs Ha: b4!=0 o b5!=0
library(multcomp)
K=matrix(c(0,0,0,0,1,0,
0,0,0,0,0,1), ncol=6, nrow=2, byrow=TRUE)
m=c(0,0)
summary(glht(fit, linfct=K, rhs=m), test=Ftest())
drop1(fit, test = "F")
library(multcomp)
K=matrix(c(0,0,0,1,0,0,
0,0,0,0,1,0,
0,0,0,0,0,1), ncol=6, nrow=3, byrow=TRUE)
m=c(0,0,0)
summary(glht(fit, linfct=K, rhs=m), test=Ftest())
K=matrix(c(0,0,0,1,0,0,
0,0,0,1,1,0,
0,0,0,1,0,1), ncol=6, nrow=3, byrow=TRUE)
m=c(0,0,0)
summary(glht(fit, linfct=K, rhs=m))
fitred <- lm(Puntaje ~ Trat + Sexo + I(Trat*(Trat=="trat2")), data = Data)
fitred <- lm(Puntaje ~ Trat + Sexo + I(Trat*(Sexo=="Mujer")), data = Data)
##############V)
fitred <- lm(Puntaje ~ Trat + Sexo + I(Trat="Mujer"*(TRT=="C")), data = Data)
##############V)
fitred <- lm(Puntaje ~ Trat + Sexo + I(Trat=="Trat2"*(Sexo=="Mujer")), data = Data)
View(Data)
##############V)
fitred <- lm(Puntaje ~ Trat + I(Trat=="Trat2"*(Sexo=="Mujer")), data = Data)
##############V)
fitred <- lm(Puntaje ~ Trat + I((Trat=="Trat2")*(Sexo=="Mujer")), data = Data)
summary(fitred)
10.3086 - 1.9965
10.3086 - 4.0983
10.3086 - 4.0983 +3.8913
#Entonces las hipótesis nulas quedan:
#Ho1: 0 <= b2
#Ho2: 0 <= b2 + b5
#Ho3: 0 <= b2 + b1
#Ho4: 0 <= b2 + b5 - b1
K=matrix(c(0,0,1,0,0,0,
0,0,1,0,0,1,
0,-1,1,0,0,0,
0,-1,1,0,0,1), ncol=6, nrow=4, byrow=TRUE)
#Entonces las hipótesis nulas quedan:
#Ho1: 0 <= b2
#Ho2: 0 <= b2 + b5
#Ho3: 0 <= b2 + b1
#Ho4: 0 <= b2 + b5 - b1
K=matrix(c(0,0,1,0,0,0,
0,0,1,0,0,1,
0,-1,1,0,0,0,
0,-1,1,0,0,1), ncol=6, nrow=4, byrow=TRUE)
m=c(0,0,0,0)
summary(glht(fit, linfct=K, rhs=m, alternative="less"))
#Entonces las hipótesis nulas quedan:
#Ho1: 0 <= b2
#Ho2: 0 <= b2 - b1
#Ho3: 0 <= b1
#Ho4: 0 <= b1 - b2 - b5
K=matrix(c(0,0,1,0,0,0,
0,-1,1,0,0,1,
0,1,0,0,0,0,
0,1,-1,0,0,-1), ncol=6, nrow=4, byrow=TRUE)
m=c(0,0,0,0)
summary(glht(fit, linfct=K, rhs=m, alternative="less"))
boxplot(Puntaje~Trat + Sexo , data= Data, col= "white", outline=FALSE)
#Entonces las hipótesis nulas quedan:
#Ho1: 0 <= b2
#Ho2: 0 <= b2 - b1
#Ho3: 0 <= b1
#Ho4: 0 <= b1 - b2 - b5
K=matrix(c(0,0,1,0,0,0,
0,-1,1,0,0,0,
0,1,0,0,0,0,
0,1,-1,0,0,-1), ncol=6, nrow=4, byrow=TRUE)
m=c(0,0,0,0)
summary(glht(fit, linfct=K, rhs=m, alternative="less"))
summary(fitred)
summary(glht(fit, linfct=K, rhs=m, alternative="less"))
rm(list = ls(all.names = TRUE))
y <- c(12,10,15,19,11,11,17,16,14,15,27,33,22,26,28,23,20,18,17)
x <- c(1,1,1,1,1,2,2,2,2,2,3,3,3,3,3,4,4,4,4)
Datos=data.frame(cbind(x,y))
Datos$x <- as.factor(Datos$x)
summary(Datos)
#I Gráfico para describir los datos (boxplot)
boxplot(y ~ x, data = Datos, col = "white", outline=FALSE)
stripchart(x ~ y, data = Datos,
method = "jitter",
pch = 19,
col = 2:4,
vertical = TRUE,
add = TRUE)
fit=lm(y ~ x, data = Datos)
summary(fit)
#III
### Hiótesis que se contrastan con la tabla ANOVA
#H0: b1=0, b2=0, b3=0 vs Ha: b1 !=0  o b2!=0 o b3!=0
drop1(fit, test="F")
##IV
summary
##IV
summary(fit)
View(Datos)
#De esta forma, consideraremos "las pruebas t" por renglon para las betas y las
#tomaremos del summary del modelo , ya establecido anteriormente
#Ademas, las pruebas a considerar son:
#      H0:b1=0 vs Ha: b1=!0
#      H0:b2=0 vs Ha: b2=!0
#      H0:b3=0 vs Ha: b3=!0
summary(fit)
#Construimos nuestro probelma
summary(glht(fit, linfct= mcp(e ="Tukey")))
#Construimos nuestro probelma
summary(glht(fit, linfct= mcp(x ="Tukey")))
summary(glht(fit, linfct= mcp(x ="Tukey")))
rm(list = ls(all.names = TRUE))
################ I)
#Leemos los datos que nos proporcionan en excel
setwd("C:/Users/vales/Documents/Modelos")
getwd()
Datos <- read.csv("Ex5A.csv")
Datos <- read.csv("Ex5.csv")
str(Datos)
View(Datos)
Datos$Trat <- as.factor(Data$Trat)
Datos$Trat <- as.factor(Datos$Trat)
summary(Data)
summary(Datos)
str(Datos)
str(Datos)
#################I)
summary(Datos)
#Realizamos un plot para visualizar y analizar los datos
library(ggplot2)
ggplot(datos , aes ( x = Edad , y = Ant , color = Trat ) ) + geom_point () +
geom_smooth( method =lm , se= FALSE , fullrange = TRUE ) + theme_bw () +
scale_colour_manual ( values = c(" firebrick 2", " steelblue 2") )
ggplot(Datos , aes ( x = Edad , y = Ant , color = Trat ) ) + geom_point () +
geom_smooth( method =lm , se= FALSE , fullrange = TRUE ) + theme_bw () +
scale_colour_manual ( values = c(" firebrick 2", " steelblue 2") )
modelo4= lm( Ant ~ Trat + Edad + Trat:Edad, data=datos)
ggplot(Datos , aes ( x = Edad , y = Ant , color = Trat ) ) + geom_point () +
geom_smooth( method =lm , se= FALSE , fullrange = TRUE ) + theme_bw () +
scale_colour_manual ( values = c(" #00042 ", " 939") )
ggplot(Datos , aes ( x = Edad , y = Ant , color = Trat ) ) + geom_point () +
geom_smooth( method =lm , se= FALSE , fullrange = TRUE ) + theme_bw () +
scale_colour_manual ( values = c(" #00042 ", " #00939") )
( values = c(" #00042 ", " #00039") )
ggplot(Datos , aes ( x = Edad , y = Ant , color = Trat ) ) + geom_point () +
geom_smooth( method =lm , se= FALSE , fullrange = TRUE ) + theme_bw () +
scale_colour_manual ( values = c(" #00042 ", " #00039") )
ggplot(Datos , aes ( x = Edad , y = Ant , color = Trat ) ) + geom_point () +
geom_smooth( method =lm , se= FALSE , fullrange = TRUE ) + theme_bw () +
scale_colour_manual ( values = c(" #00042 ", " #00042") )
ggplot(Datos , aes ( x = Edad , y = Ant , color = Trat ) ) + geom_point () +
geom_smooth( method =lm , se= FALSE , fullrange = TRUE ) + theme_bw () +
scale_colour_manual ( values = c(" #00042 ", " blue") )
ggplot(Datos , aes ( x = Edad , y = Ant , color = Trat ) ) + geom_point () +
geom_smooth( method =lm , se= FALSE , fullrange = TRUE ) + theme_bw () +
scale_colour_manual ( values = c(" yellow ", " blue") )
ggplot(Datos , aes ( x = Edad , y = Ant , color = Trat ) )
ggplot(Datos , aes ( x = Edad , y = Ant , color = Trat ) ) + geom_point () +
geom_smooth( method =lm , se= FALSE , fullrange = TRUE )
ggplot(Datos , aes ( x = Edad , y = Ant , color = Trat ) ) + geom_point ()
fit = lm( Ant ~ Trat + Edad + Trat:Edad, data=Datos)
summary(fit)
levels(Datos$Trat)
K= matrix(c(0,0,0,1), ncol=4, nrow=1, byrow=TRUE)
m=c(0)
summary(glht(fit, linfct=K, rhs=m),test=Ftest())
############################## V)
drop1(fit, test = "F")
summary(Datos)
age <- seq(from = 16, to = 60, by = .5)
length(age)
#Para una banda para la recta del Grupo control
#E(Ant;Trat=Control, Edad)= b0 + b2 Edad
KC <- cbind(1, 0, age, 0,0,0)
(KC)
#Para una banda para la recta del Grupo control
#E(Ant;Trat=Control, Edad)= b0 + b2 Edad
KC <- cbind(1, 0, age, 0)
(KC)
#Para una banda para la recta del Grupo Med
#E(Ant;Trat=Med, Edad)=  b0 + b1 + (b2+b3)Edad
KM <- cbind(1, 1, Edad, Edad)
#Para una banda para la recta del Grupo Med
#E(Ant;Trat=Med, Edad)=  b0 + b1 + (b2+b3)Edad
KM <- cbind(1, 1, age, age)
K=rbind(KC, KM)
fitE <- glht(fit, linfct = K)
fitci <- confint(fitE, level = 0.95)
lines(age, coef(fitE)[1:97], col="red")
K=rbind(KC, KM)
fitE <- glht(fit, linfct = K)
fitci <- confint(fitE, level = 0.95)
length(Edad)
Edad <- seq(from = 16, to = 60, by = .5)
length(Edad)
#Para una banda para la recta del Grupo control
#E(Ant;Trat=Control, Edad)= b0 + b2 Edad
KC <- cbind(1, 0, age, 0)
#Para una banda para la recta del Grupo control
#E(Ant;Trat=Control, Edad)= b0 + b2 Edad
KC <- cbind(1, 0, Edad, 0)
(KC)
#Para una banda para la recta del Grupo Med
#E(Ant;Trat=Med, Edad)=  b0 + b1 + (b2+b3)Edad
KM <- cbind(1, 1, Edad, Edad)
K=rbind(KC, KM)
fitE <- glht(fit, linfct = K)
fitci <- confint(fitE, level = 0.95)
age <- seq(from = 19, to = 67, by = .5)
length(age)
length(Edad)
lines(age, coef(fitE)[1:89], col="red")
lines(age, fitci$confint[1:89,"upr"], col="red")
lines(Edad, coef(fitE)[1:89], col="red")
lines(Edad, fitci$confint[1:89,"upr"], col="red")
lines(Edad, fitci$confint[1:89,"lwr"], col="red")
fitci <- confint(fitE, level = 0.95)
rm(list = ls(all.names = TRUE))
getwd()
Datos <- read.csv("Ex5.csv")
Datos$Trat <- as.factor(Datos$Trat)
str(Datos)
levels(Datos$Trat)
#################I)
summary(Datos)
#Realizamos un plot para visualizar y analizar los datos
library(ggplot2)
ggplot(Datos , aes ( x = Edad , y = Ant , color = Trat ) ) + geom_point ()
fit = lm( Ant ~ Trat + Edad + Trat:Edad, data=Datos)
summary(fit)
K= matrix(c(0,0,0,1), ncol=4, nrow=1, byrow=TRUE)
m=c(0)
summary(glht(fit, linfct=K, rhs=m),test=Ftest())
summary(Datos)
Edad <- seq(from = 16, to = 60, by = .5)
length(Edad)
#Para una banda para la recta del Grupo control
#E(Ant;Trat=Control, Edad)= b0 + b2 Edad
KC <- cbind(1, 0, Edad, 0)
(KC)
#Para una banda para la recta del Grupo Med
#E(Ant;Trat=Med, Edad)=  b0 + b1 + (b2+b3)Edad
KM <- cbind(1, 1, Edad, Edad)
K=rbind(KC, KM)
fitE <- glht(fit, linfct = K)
fitci <- confint(fitE, level = 0.95)
View(fitci)
fitci
lines(Edad, coef(fitE)[1:89], col="red")
lines(Edad, fitci$confint[1:89,"upr"], col="red")
lines(Edad, fitci$confint[1:89,"lwr"], col="red")
lines(Edad, coef(fitE)[1:89], col="red")
()
()
# Para realizar esa comparacion, usaremos intervalos de confianza simultaneos
X11()
plot(Datos$Edad, Datos$Ant, pch=19, col = c("red", "green", "blue")[Datos$Trat])
legend("bottomright", levels(Datos$Trat),
col = c("red", "green", "blue"), pch = 19, inset = 0.01,  pt.cex=1.5,cex = .9, y.intersp = 1.3 , bty="n")
summary(Datos)
Edad <- seq(from = 16, to = 60, by = .5)
length(Edad)
#Para una banda para la recta del Grupo control
#E(Ant;Trat=Control, Edad)= b0 + b2 Edad
KC <- cbind(1, 0, Edad, 0)
(KC)
#Para una banda para la recta del Grupo Med
#E(Ant;Trat=Med, Edad)=  b0 + b1 + (b2+b3)Edad
KM <- cbind(1, 1, Edad, Edad)
K=rbind(KC, KM)
fitE <- glht(fit, linfct = K)
fitci <- confint(fitE, level = 0.95)
lines(Edad, coef(fitE)[1:89], col="red")
lines(Edad, fitci$confint[1:89,"upr"], col="red")
lines(Edad, fitci$confint[1:89,"lwr"], col="red")
lines(age, coef(fitE)[98:194], col="green")
lines(age, fitci$confint[98:194,"upr"], col="green")
lines(age, fitci$confint[98:194,"lwr"], col="green")
lines(age, coef(fitE)[195:291], col="blue")
lines(age, fitci$confint[195:291,"upr"], col="blue")
lines(age, fitci$confint[195:291,"lwr"], col="blue")
k
K
lines(Edad, coef(fitE)[1:89], col="red")
lines(Edad, fitci$confint[1:89,"upr"], col="red")
lines(Edad, fitci$confint[1:89,"lwr"], col="red")
lines(age, coef(fitE)[90:178], col="green")
lines(Edad, coef(fitE)[90:178], col="green")
lines(Edad, fitci$confint[90:178,"upr"], col="green")
lines(Edad, fitci$confint[90:178,"lwr"], col="green")
ggplot( datos , aes ( x = Edad , y = Ant , color = Trat ) ) + geom_point () +
stat_smooth( method =lm , se= TRUE , fullrange = TRUE , level = 0.95,
aes( fill = Trat ) ) + theme_bw () +
scale_colour_manual( values = c(" firebrick 2", " steelblue 2") )
ggplot( Datos , aes ( x = Edad , y = Ant , color = Trat ) ) + geom_point () +
stat_smooth( method =lm , se= TRUE , fullrange = TRUE , level = 0.95,
aes( fill = Trat ) ) + theme_bw () +
scale_colour_manual( values = c(" firebrick 2", " steelblue 2") )
ggplot( Datos , aes ( x = Edad , y = Ant , color = Trat ) ) + geom_point () +
stat_smooth( method =lm , se= TRUE , fullrange = TRUE , level = 0.80,
aes( fill = Trat ) ) + theme_bw () +
scale_colour_manual( values = c(" firebrick 2", " steelblue 2") )
legend("bottomright", levels(Datos$Trat),
col = c("red", "green", "blue"), pch = 19, inset = 0.01,  pt.cex=1.5,cex = .9, y.intersp = 1.3 , bty="n")
lines(Edad, coef(fitE)[1:89], col="red")
lines(Edad, fitci$confint[1:89,"upr"], col="red")
lines(Edad, fitci$confint[1:89,"lwr"], col="red")
lines(Edad, coef(fitE)[90:178], col="green")
lines(Edad, fitci$confint[90:178,"upr"], col="green")
lines(Edad, fitci$confint[90:178,"lwr"], col="green")
# Realizaremos esa comparacion, usaremos intervalos de confianza simultaneos
X11()
plot(Datos$Edad, Datos$Ant, pch=19, col = c("red", "green", "blue")[Datos$Trat])
legend("bottomright", levels(Datos$Trat),
col = c("red", "green", "blue"), pch = 19, inset = 0.01,  pt.cex=1.5,cex = .9, y.intersp = 1.3 , bty="n")
lines(Edad, coef(fitE)[1:89], col="red")
lines(Edad, fitci$confint[1:89,"upr"], col="red")
lines(Edad, fitci$confint[1:89,"lwr"], col="red")
lines(Edad, coef(fitE)[90:178], col="green")
lines(Edad, fitci$confint[90:178,"upr"], col="green")
lines(Edad, fitci$confint[90:178,"lwr"], col="green")
ggplot( datos , aes ( x = Edad , y = Ant , color = Trat ) ) + geom_point () +
stat_smooth( method =lm , se= TRUE , fullrange = TRUE , level = 0.95,
aes( fill = Trat ) ) + theme_bw () +
scale_colour_manual( values = c(" firebrick 2", " steelblue 2") )
ggplot( Datos , aes ( x = Edad , y = Ant , color = Trat ) ) + geom_point () +
stat_smooth( method =lm , se= TRUE , fullrange = TRUE , level = 0.95,
aes( fill = Trat ) ) + theme_bw () +
scale_colour_manual( values = c(" firebrick 2", " steelblue 2") )
ggplot( Datos , aes ( x = Edad , y = Ant , color = Trat ) ) + geom_point () +
stat_smooth( method =lm , se= TRUE , fullrange = TRUE , level = 0.95,
aes( fill = Trat ) ) + theme_bw () +
scale_colour_manual( values = c(" blue", " yellow") )
ggplot( Datos , aes ( x = Edad , y = Ant , color = Trat ) ) + geom_point () +
stat_smooth( method =lm , se= TRUE , fullrange = TRUE , level = 0.95,
aes( fill = Trat ) ) + theme_bw () +
scale_colour_manual( values = c(" blue", " ivory") )
ggplot( Datos , aes ( x = Edad , y = Ant , color = Trat ) ) + geom_point () +
stat_smooth( method =lm , se= TRUE , fullrange = TRUE , level = 0.95,
aes( fill = Trat ) ) + theme_bw () +
scale_colour_manual( values = c(" blue", " purple") )
ggplot(Datos , aes ( x = Edad , y = Ant , color = Trat ) ) + geom_point ()
